ipcrm/puppet_webapp:
  Env:
    - PORT: "8080"
  PreBuild:
    - sudo pip install tox
    - curl -o jq 'https://github.com/stedolan/jq/releases/download/jq-1.5/jq-linux64'
    - chmod +x jq
  Build:
    - tox
    - sonar-scanner -Dsonar.login=$SONAR_LOGIN -Dsonar.projectVersion=$(python ./setup.py --version)
    - sleep 5
    - QG=$(curl -s https://sonarcloud.io/api/qualitygates/project_status\?projectKey\=ipcrm-puppet_webapp|./jq .[].status)
    - [ $QG == '"OK"' ] || echo "Failed SonarCube Quality Gate!"
    - [ $QG == '"OK"' ] || exit 10
    - python ./setup.py sdist
  PkgInclude:
    - 'dist/*.tar.gz'
  PreInstall:
    - sudo yum install -y python-pip python-virtualenv gcc gcc-c++
    - test -d ~/virtualenv || mkdir ~/virtualenv
    - test -d ~/virtualenv/puppet_webapp && rm -rf ~/virtualenv/puppet_webapp
    - virtualenv ~/virtualenv/puppet_webapp
  PostInstall:
    - source ~/virtualenv/puppet_webapp/bin/activate
    - pip install dist/*
    - pip install gunicorn
  Exec:
    - source ~/virtualenv/puppet_webapp/bin/activate
    - gunicorn --workers=2 webui:webui -b 0.0.0.0:$PORT
  PostStart:
    - sudo iptables -I INPUT -p tcp -m multiport --dports $PORT -m comment --comment "110 allow http ${PORT} access" -j ACCEPT
    - publicip=$(curl -s ident.me) || true
    - 'echo "URL: http://$publicip:$PORT"'
    - curl -s 'http://$publicip:$PORT' | grep 'The shortest path' 1>/dev/null
    - SMOKETEST=$?
    - if [ $SMOKETEST != 0 ]; then
    -   echo "Failed smoke test!"
    -   exit 1
    - fi
